name: Release

on:
  push:
    branches:
      - main
    tags-ignore:
      - v*.*.*

jobs:
  check-api:
    env:
      # PORT: 8080
      RUN_SCHEDULED_SEARCHES: false
      MOCK_EXTRACTION: true
      MOCK_NOTIFICATION: true
      DB_TYPE: sqlite
      DB_DATABASE: torvi-test.db
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          cache: "yarn"
          cache-dependency-path: ./api/yarn.lock

      - name: Install dependencies
        run: yarn
        working-directory: ./api

      - name: Build
        run: yarn build
        working-directory: ./api

      - name: Lint
        run: yarn lint
        working-directory: ./api

      - name: Test
        run: yarn test
        working-directory: ./api

  check-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          cache-dependency-path: ./client/yarn.lock
          cache: "yarn"

      - name: Install dependencies
        run: yarn
        working-directory: ./client

      - name: Build
        run: yarn build
        working-directory: ./client

      - name: Lint
        run: yarn lint
        working-directory: ./client

  release:
    needs: [check-api, check-client]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.email "${GITHUB_ACTOR}"
          git config --global user.name "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Create client release
        working-directory: ./client
        run: |
          yarn config set version-tag-prefix client-v
          yarn version --minor

      - name: Create api release
        working-directory: ./api
        run: |
          yarn config set version-tag-prefix api-v
          yarn version --minor

      - name: Push release to git
        run: git push && git push --tags

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            /var/www/torvi/redeploy.sh
